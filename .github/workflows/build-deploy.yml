name: Build and Deploy

on:
  push:
    branches: [main, dev-release-ci]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "main"
        type: string

jobs:
  deploy:
    runs-on: self-hosted # REQUIRES SOME SUDO EXECUTION PRIVILEGES WITHOUT A PASSWORD PROMPT

    steps:
      - name: Stopping systemd service
        run: sudo systemctl stop discordbot

      - name: Pulling latest changes
        working-directory: /home/vb2007/prod/discordbot
        run: |
          BRANCH="${{ github.event.inputs.branch || 'main' }}"
          echo "Deploying branch: $BRANCH"
          git fetch origin
          git reset --hard origin/$BRANCH
          git clean -fd
          echo "Successfully pulled latest changes from $BRANCH"

      - name: Intalling Node.js dependencies
        working-directory: /home/vb2007/prod/discordbot
        run: |
          rm -rf node_modules
          npm ci
          echo "Dependencies installed successfully"

      # for now we run without building
      # - name: Build the application
      #   working-directory: /home/vb2007/prod/discordbot
      #   run: |
      #     npm run build
      #     echo "Application built successfully"

      - name: Deploying possible new commands
        working-directory: /home/vb2007/prod/discordbot
        run: |
          echo "Starting command deployment..."
          output=$(npm run deploy 2>&1)
          echo "$output"

          if echo "$output" | grep -q "Registered .* slash (/) commands at Discord"; then
            echo "✅ Command deployment successful"
          else
            echo "❌ Command deployment failed"
            exit 1
          fi
          sleep 8

      - name: Updating command data
        working-directory: /home/vb2007/prod/discordbot
        run: |
          echo "Starting table creation and command data update..."
          output=$(npm run create-tables 2>&1)
          echo "$output"

          if echo "$output" | grep -q "All queries are executed & all tables are processed." && echo "$table_output" | grep -q "Command data has been updated successfully."; then
            echo "✅ Table creation and command data update successful"
          else
            echo "❌ Table creation or command data update failed"
            exit 1
          fi
          sleep 5

      - name: Starting systemd service
        run: |
          sudo systemctl start discordbot
          sleep 5
          sudo systemctl status discordbot --no-pager
          echo "Systemd service started"

      - name: Verifying deployment outcome
        run: |
          echo "Waiting for the service to start"
          sleep 10

          if sudo systemctl is-active --quiet discordbot.service; then
            echo "✅ Deployment successful - service is running"
          else
            echo "❌ Deployment failed - service is not running"
            sudo systemctl status discordbot.service --no-pager
            exit 1
          fi
